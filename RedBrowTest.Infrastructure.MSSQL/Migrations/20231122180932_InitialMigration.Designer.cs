// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedBrowTest.Infrastructure.MSSQL.Persistence;

#nullable disable

namespace RedBrowTest.Infrastructure.MSSQL.Migrations
{
    [DbContext(typeof(RedBrowTestContext))]
    [Migration("20231122180932_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RedBrowTest.Core.Domain.AuthenticationTokens", b =>
                {
                    b.Property<string>("IdAuthenticationToken")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("IdAuthenticationToken");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AuthenticationTokens");
                });

            modelBuilder.Entity("RedBrowTest.Core.Domain.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = "7325a7ff-2680-4199-b83d-2ca225ee8780",
                            CreatedAt = new DateTime(2023, 11, 22, 11, 9, 32, 147, DateTimeKind.Local).AddTicks(2222),
                            Edad = 100,
                            Email = "admin@mail.com",
                            Nombre = "admin",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("RedBrowTest.Core.Domain.AuthenticationTokens", b =>
                {
                    b.HasOne("RedBrowTest.Core.Domain.Usuario", "Usuario")
                        .WithMany("AuthenticationTokens")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_AuthenticationTokens_Usuarios");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RedBrowTest.Core.Domain.Usuario", b =>
                {
                    b.Navigation("AuthenticationTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
